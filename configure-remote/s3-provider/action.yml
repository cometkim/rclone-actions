name: Configure a remote using S3 provider

description: Set up S3 compatible provider. See available options in https://rclone.org/s3/

inputs:
  name:
    description: 'Name of the remote'
    required: true
  provider:
    description: 'S3 compatible API provider'
    required: true
  endpoint:
    description: 'S3 compatible API endpoint'
  access-key-id:
    description: 'Access Key ID to access the bucket'
    required: true
  secret-access-key:
    description: 'Secret Access Key to access the bucket'
    required: true
  region:
    description: 'Region to connect to'
    default: ""
  acl:
    description: 'Canned ACL used when creating buckets and/or storing objects in S3'
    default: ""
  server-side-encryption:
    description: 'The server-side encryption algorithm used when storing this object in S3'
    default: ""
  ssm-kms-key-id:
    description: 'If using KMS ID you must provide the ARN of Key.'
    default: ""
  storage-class:
    description: 'The storage class to use when storing objects in S3'
    default: ""

outputs:
  config-file:
    description: 'The location of Rclone cofiguration file'
    value: "${{ steps.config-file.outputs.path }}"

runs:
  using: 'composite'
  steps:
    - id: config-file
      shell: bash
      run: |
        rclone config create "${{ inputs.name }}" --non-interactive > /dev/null
        CONFIG="$(rclone config file | tail -n 1)"
        echo "path=$CONFIG" >> "$GITHUB_OUTPUT"

    - name: Configure ${{ inputs.name }}
      shell: bash
      run: |
        function option() {
          local opt; opt="$1"
          local val; val="$2"
          if [[ -n "$val" ]]; then
            rclone config update "${{ inputs.name }}" --non-interactive $opt=$val > /dev/null           
          fi
        }
        option "provider"               "${{ inputs.provider }}"
        option "access-key-id"          "${{ inputs.access-key-id }}"
        option "secret-access-key"      "${{ inputs.secret-access-key }}"
        option "endpoint"               "${{ inputs.endpoint }}"
        option "region"                 "${{ inputs.region }}"
        option "acl"                    "${{ inputs.acl }}"
        option "server-side-encryption" "${{ inputs.server-side-encryption }}"
        option "sse-kms-key-id"         "${{ inputs.sse-kms-key-id }}"
        option "storage-class"          "${{ inputs.storage-class }}"
